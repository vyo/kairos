import arrayNew
import arraySize
import charAppend
//resizes an array and deletes cells if necessary
//expects from top to bottom:
//new size
//label
//NOTE: cells are not being initialized if array
//is being expanded!

label arrayResize

//get current size of array on top, thus we have now
//current size -> new size -> label
copy 2
call arraySize

//save new size
copy 2
swap

//turn sizes into indices, thus we have now
//index -> max index -> label
//index starts at old maximum index +1 
push 1
sub
swap


//while index <= max index
label ARRAYRESIZE_LOOP
copy 2
copy 2
sub
jneg ARRAYRESIZE_END

dupl
//retrieve and discard array[i]
copy 5
swap
call charAppend
get
pop

push 1
add

jump ARRAYRESIZE_LOOP

//adjust size entry to new size
label ARRAYRESIZE_END
pop
pop
call arrayNew

ret